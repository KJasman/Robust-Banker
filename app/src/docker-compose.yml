# Some issues lead to needing to run this: 
# export $(grep -v '^#' authentication/.env | xargs)
# docker compose -f <absolute-path-to-docker-compose> up -d --build
services:
  api-gateway:
    build: 
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - JWT_SECRET=${JWT_SECRET}
      - RATE_LIMIT=${RATE_LIMIT}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
    depends_on:
      - redis
      - auth-service
    networks:
      - trading-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  auth-service:
    build: 
      context: ./authentication
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./authentication/.env
    environment:
      - DB_HOST=auth-db
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - trading-network
    restart: unless-stopped

  auth-db:
    image: postgres:15-alpine
    env_file:
      - ./authentication/.env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - trading-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    env_file:
      - ./order-service/.env
    environment:
      - CASSANDRA_DB_HOST=cassandra-db
      - CASSANDRA_STOCKS_KEYSPACE=${CASSANDRA_STOCKS_KEYSPACE}
      - CASSANDRA_ORDERS_KEYSPACE=${CASSANDRA_ORDERS_KEYSPACE}
    depends_on:
      cassandra-db:
        condition: service_healthy
    networks:
      - trading-network
    restart: unless-stopped

    
  cassandra-db:
    image: cassandra:latest
    env_file:
      - ./order-service/.env
    environment:
      - CASSANDRA_CLUSTER_NAME=trading-cluster
      - CASSANDRA_USER=${DB_USER}
      - CASSANDRA_PASSWORD=${DB_PASSWORD}
      - CASSANDRA_STOCKS_KEYSPACE=${CASSANDRA_STOCKS_KEYSPACE}
      - CASSANDRA_ORDERS_KEYSPACE=${CASSANDRA_ORDERS_KEYSPACE}
    ports:
      - "9042:9042"
    volumes:
      - cassandra-db-data:/var/lib/cassandra
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "${DB_USER}", "-p", "${DB_PASSWORD}", "-e", "DESCRIBE KEYSPACES"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  trading-network:
    driver: bridge

volumes:
  auth-db-data:
    name: auth-db-data
  cassandra-db-data:
    name: cassandra-db-data
